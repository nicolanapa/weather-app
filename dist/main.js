(()=>{"use strict";var n={28:(n,r,e)=>{e.d(r,{c:()=>A});var t=e(648),o=e.n(t),a=e(312),i=e.n(a)()(o());i.push([n.id,"#dialogLogin {\n    width: 100%;\n    height: 100%;\n    padding: 40px;\n    background-color: rgb(255, 240, 209);\n}\n\n.formLogin {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.formLogin > label + input {\n    margin: 10px 0 35px 0;\n}\n\ninput {\n    width: 20%;\n    padding: 15px 25px;\n    border: 2px solid black;\n    border-radius: 15px;\n}\n\n#loginButton {\n    padding: 15px;\n    font-size: 18px;\n    border: 2px solid black;\n    background-color: white;\n    border-radius: 25px;\n}\n","",{version:3,sources:["webpack://./src/loginStyle.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,UAAU;IACV,kBAAkB;IAClB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,uBAAuB;IACvB,uBAAuB;IACvB,mBAAmB;AACvB",sourcesContent:["#dialogLogin {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 40px;\r\n    background-color: rgb(255, 240, 209);\r\n}\r\n\r\n.formLogin {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.formLogin > label + input {\r\n    margin: 10px 0 35px 0;\r\n}\r\n\r\ninput {\r\n    width: 20%;\r\n    padding: 15px 25px;\r\n    border: 2px solid black;\r\n    border-radius: 15px;\r\n}\r\n\r\n#loginButton {\r\n    padding: 15px;\r\n    font-size: 18px;\r\n    border: 2px solid black;\r\n    background-color: white;\r\n    border-radius: 25px;\r\n}\r\n"],sourceRoot:""}]);const A=i},904:(n,r,e)=>{e.d(r,{c:()=>A});var t=e(648),o=e.n(t),a=e(312),i=e.n(a)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto+Flex:opsz,wght@8..144,100..1000&display=swap);"]),i.push([n.id,'* {\n    font-family: roboto, "Roboto Flex", system-ui;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    background-color: rgb(53, 47, 68);\n}\n\n.form-search {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 20px;\n    border-top-left-radius: 35px;\n    border-bottom-left-radius: 35px;\n    background-color: rgb(92, 84, 112);\n}\n\n#city-input,\n#search-button {\n    border: 0;\n    border-radius: 20px;\n    background-color: rgb(255, 240, 209);\n    padding: 22.5px;\n    margin: 25px 5px;\n    font-weight: 500;\n}\n\n#search-button {\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n    font-weight: 700;\n}\n\n.credits {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    padding: 25px 10px;\n}\n\n.left-half {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 120px 1fr;\n    margin: 10px 30px 10px 5px;\n}\n\n.forecast-display {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(3, 1fr);\n    padding: 20px;\n    border-top-left-radius: 35px;\n    border-bottom-left-radius: 35px;\n    background-color: rgb(92, 84, 112);\n}\n\n.forecast-display > div {\n    background-color: rgb(255, 240, 209);\n    border-radius: 20px;\n    margin: 30px 5%;\n    padding: 25px 0 10px 18px;\n}\n\n.forecast-display > div > .weather-images {\n    display: grid;\n    grid-template-columns: 88px 1.3fr 2.8fr;\n    align-items: center;\n    padding: 20px 10px;\n}\n\n.temp {\n    display: flex;\n    margin: 6px 0 -10px -12px;\n}\n\n.gif {\n    justify-self: end;\n    margin-right: 20%;\n    border-radius: 20px;\n}\n\n.website-container {\n    display: grid;\n    grid-template-columns: 1.8fr 3fr;\n    grid-template-rows: 1fr;\n    padding: 15px;\n}\n\n.right-half {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 40% 1fr;\n    margin: 10px 0 10px 5px;\n}\n\n.current-0 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 20px;\n    border-top-right-radius: 35px;\n    border-bottom-right-radius: 35px;\n    background-color: rgb(92, 84, 112);\n}\n\n.current-0 > h2 {\n    background-color: rgb(255, 240, 209);\n    font-size: calc(1rem + 1vh + 1vw);\n    border-radius: 30px;\n    padding: 60px;\n}\n\n.double-container {\n    display: grid;\n    grid-template-columns: 2fr 3fr;\n    padding: 20px;\n    background-color: rgb(92, 84, 112);\n    border-top-right-radius: 35px;\n    border-bottom-right-radius: 35px;\n}\n\n.double-container > div {\n    background-color: rgb(255, 240, 209);\n    padding: 20px;\n    margin: 20px;\n    border-radius: 20px;\n}\n\n.weather-bigger {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.bigger-gif {\n    display: grid;\n    max-height: 1000px;\n}\n\n.bigger-gif > img {\n    justify-self: center;\n    align-self: center;\n    margin-right: 0;\n    border-radius: 40px;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,6CAA6C;IAC7C,SAAS;IACT,UAAU;AACd;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,4BAA4B;IAC5B,+BAA+B;IAC/B,kCAAkC;AACtC;;AAEA;;IAEI,SAAS;IACT,mBAAmB;IACnB,oCAAoC;IACpC,eAAe;IACf,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,0BAA0B;IAC1B,6BAA6B;IAC7B,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,0BAA0B;IAC1B,kCAAkC;IAClC,aAAa;IACb,4BAA4B;IAC5B,+BAA+B;IAC/B,kCAAkC;AACtC;;AAEA;IACI,oCAAoC;IACpC,mBAAmB;IACnB,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,uCAAuC;IACvC,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,gCAAgC;IAChC,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,0BAA0B;IAC1B,2BAA2B;IAC3B,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;IAC7B,gCAAgC;IAChC,kCAAkC;AACtC;;AAEA;IACI,oCAAoC;IACpC,iCAAiC;IACjC,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,aAAa;IACb,kCAAkC;IAClC,6BAA6B;IAC7B,gCAAgC;AACpC;;AAEA;IACI,oCAAoC;IACpC,aAAa;IACb,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,eAAe;IACf,mBAAmB;AACvB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Roboto+Flex:opsz,wght@8..144,100..1000&display=swap");\r\n\r\n* {\r\n    font-family: roboto, "Roboto Flex", system-ui;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    background-color: rgb(53, 47, 68);\r\n}\r\n\r\n.form-search {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 20px;\r\n    border-top-left-radius: 35px;\r\n    border-bottom-left-radius: 35px;\r\n    background-color: rgb(92, 84, 112);\r\n}\r\n\r\n#city-input,\r\n#search-button {\r\n    border: 0;\r\n    border-radius: 20px;\r\n    background-color: rgb(255, 240, 209);\r\n    padding: 22.5px;\r\n    margin: 25px 5px;\r\n    font-weight: 500;\r\n}\r\n\r\n#search-button {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n}\r\n\r\n.credits {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    padding: 25px 10px;\r\n}\r\n\r\n.left-half {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 120px 1fr;\r\n    margin: 10px 30px 10px 5px;\r\n}\r\n\r\n.forecast-display {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(3, 1fr);\r\n    padding: 20px;\r\n    border-top-left-radius: 35px;\r\n    border-bottom-left-radius: 35px;\r\n    background-color: rgb(92, 84, 112);\r\n}\r\n\r\n.forecast-display > div {\r\n    background-color: rgb(255, 240, 209);\r\n    border-radius: 20px;\r\n    margin: 30px 5%;\r\n    padding: 25px 0 10px 18px;\r\n}\r\n\r\n.forecast-display > div > .weather-images {\r\n    display: grid;\r\n    grid-template-columns: 88px 1.3fr 2.8fr;\r\n    align-items: center;\r\n    padding: 20px 10px;\r\n}\r\n\r\n.temp {\r\n    display: flex;\r\n    margin: 6px 0 -10px -12px;\r\n}\r\n\r\n.gif {\r\n    justify-self: end;\r\n    margin-right: 20%;\r\n    border-radius: 20px;\r\n}\r\n\r\n.website-container {\r\n    display: grid;\r\n    grid-template-columns: 1.8fr 3fr;\r\n    grid-template-rows: 1fr;\r\n    padding: 15px;\r\n}\r\n\r\n.right-half {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 40% 1fr;\r\n    margin: 10px 0 10px 5px;\r\n}\r\n\r\n.current-0 {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n    border-top-right-radius: 35px;\r\n    border-bottom-right-radius: 35px;\r\n    background-color: rgb(92, 84, 112);\r\n}\r\n\r\n.current-0 > h2 {\r\n    background-color: rgb(255, 240, 209);\r\n    font-size: calc(1rem + 1vh + 1vw);\r\n    border-radius: 30px;\r\n    padding: 60px;\r\n}\r\n\r\n.double-container {\r\n    display: grid;\r\n    grid-template-columns: 2fr 3fr;\r\n    padding: 20px;\r\n    background-color: rgb(92, 84, 112);\r\n    border-top-right-radius: 35px;\r\n    border-bottom-right-radius: 35px;\r\n}\r\n\r\n.double-container > div {\r\n    background-color: rgb(255, 240, 209);\r\n    padding: 20px;\r\n    margin: 20px;\r\n    border-radius: 20px;\r\n}\r\n\r\n.weather-bigger {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.bigger-gif {\r\n    display: grid;\r\n    max-height: 1000px;\r\n}\r\n\r\n.bigger-gif > img {\r\n    justify-self: center;\r\n    align-self: center;\r\n    margin-right: 0;\r\n    border-radius: 40px;\r\n}\r\n'],sourceRoot:""}]);const A=i},312:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},648:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[r].concat([a]).join("\n")}return[r].join("\n")}},596:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],d=t.base?c[0]+t.base:c[0],l=a[d]||0,s="".concat(d," ").concat(l);a[d]=l+1;var p=e(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var g=o(u,t);t.byIndex=A,r.splice(A,0,{identifier:s,updater:g,references:1})}i.push(s)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=e(a[i]);r[A].references--}for(var c=t(n,o),d=0;d<a.length;d++){var l=e(a[d]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}a=c}}},176:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},808:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},120:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},520:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},936:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{var n=e(596),r=e.n(n),t=e(520),o=e.n(t),a=e(176),i=e.n(a),A=e(120),c=e.n(A),d=e(808),l=e.n(d),s=e(936),p=e.n(s),u=e(904),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=l(),r()(u.c,g),u.c&&u.c.locals&&u.c.locals;var f=e(28),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),r()(f.c,m),f.c&&f.c.locals&&f.c.locals;let C=localStorage.getItem("weatherApi"),x=localStorage.getItem("giphyApi");function b(n){let r=h["next"+n][1];return r=r.replace(" ","+"),r}function B(){let n=h.current[1];return n=n.replace(" ","+"),n}null===localStorage.getItem("weatherApi")||null===localStorage.getItem("giphyApi")?function(){let n=document.querySelector(".website-container"),r=document.createElement("dialog");r.open="true",r.id="dialogLogin";let e=document.createElement("form");e.method="post",e.action="#",e.classList.add("formLogin");let t=document.createElement("label");t.textContent="Enter your Weather API",t.id="weatherApi";let o=document.createElement("input");o.id="weatherApi",o.placeholder="dk42dl4...";let a=document.createElement("label");a.textContent="Enter your Giphy API",a.id="giphyApi";let i=document.createElement("input");i.id="giphyApi",i.placeholder="jdn2kdsf04f3...";let A=document.createElement("button");A.textContent="Login",A.id="loginButton",n.appendChild(r),r.appendChild(e),e.appendChild(t),e.appendChild(o),e.appendChild(a),e.appendChild(i),e.appendChild(A),e.addEventListener("submit",(n=>{r.open="false",r.close(),C=o.value,x=i.value,localStorage.setItem("weatherApi",C),localStorage.setItem("giphyApi",x),n.preventDefault()}))}():console.log("Welcome!");let y="",I="",h="";function v(){let n=new Date;return n.getMonth()<=9&&n.getDate()<=9?(n=n.getFullYear()+"-0"+(n.getMonth()+1)+"-0"+n.getDate(),console.log("Oggi è il "+n)):n.getMonth()<=9&&n.getDate()>=9?(n=n.getFullYear()+"-0"+(n.getMonth()+1)+"-"+n.getDate(),console.log("Oggi è il "+n)):n.getDate()<=9&&n.getMonth()>=9?(n=n.getFullYear()+"-"+(n.getMonth()+1)+"-0"+n.getDate(),console.log("Oggi è il "+n)):(n=n.getFullYear()+"-"+(n.getMonth()+1)+"-"+n.getDate(),console.log("Oggi è il "+n)),n=String(n),n}!function(){let n=document.querySelector(".form-search"),r=document.querySelector("#city-input");n.addEventListener("submit",(n=>{y=r.value,console.log("You searched: "+y),async function(){I=await fetch("https://api.weatherapi.com/v1/forecast.json?key="+C+"&q="+y+"&days=3"),I=await I.json(),function(){function n(){let n=I.forecast.forecastday[1].day.condition.icon;return n=n.replace("//cdn.weatherapi.com/","./"),n}h={location:[I.location.name,I.location.country],current:[v(),I.current.condition.text,function(){let n=I.current.condition.icon;return n=n.replace("//cdn.weatherapi.com/","./"),n}(),I.current.temp_c],next0:[I.forecast.forecastday[0].date,I.forecast.forecastday[0].day.condition.text,n(),I.forecast.forecastday[0].day.avgtemp_c],next1:[I.forecast.forecastday[1].date,I.forecast.forecastday[1].day.condition.text,n(),I.forecast.forecastday[1].day.avgtemp_c],next2:[I.forecast.forecastday[2].date,I.forecast.forecastday[2].day.condition.text,n(),I.forecast.forecastday[2].day.avgtemp_c]},console.log(h),console.table(h),""!==y&&function(){let n=document.querySelectorAll(".city");for(let r=0;r<3;r++){n[r].textContent=y+", ";let e=document.querySelector(".day-"+r);e.textContent=0===r?h["next"+r][0]+", soon":h["next"+r][0];let t=document.querySelector(".temp-"+r);t.textContent=h["next"+r][3];let o=document.querySelector(".icon-"+r);o.src=h["next"+r][2],0===r&&(n[3].textContent=y+", ",e=document.querySelector(".day--0"),e.textContent=h.current[0],t=document.querySelector(".temp--0"),t.textContent=h.current[3],o=document.querySelector(".icon--0"),o.src=h.current[2])}}(),""!==y&&async function(){let n=document.querySelectorAll(".gif");for(let r=0;r<3;r++){let e=await fetch("https://api.giphy.com/v1/gifs/translate?api_key="+x+"&s="+b(r),{mode:"cors"});e=await e.json(),console.log(e),n[r].src=e.data.images.original.url,0===r&&(e=await fetch("https://api.giphy.com/v1/gifs/translate?api_key="+x+"&s="+B(),{mode:"cors"}),e=await e.json(),console.log(e),n[3].src=e.data.images.original.url)}}()}()}(),n.preventDefault()}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,